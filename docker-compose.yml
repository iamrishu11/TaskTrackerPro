version: "3.9"

services:
  web:
    build: .
    container_name: flask_app
    restart: unless-stopped
    env_file:
      - .env.docker
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:14
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: tasktracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A celery_worker.celery_app worker --loglevel=info
    restart: unless-stopped
    depends_on:
      web:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.docker
    volumes:
      - .:/app

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A celery_worker.celery_app beat --loglevel=info
    restart: unless-stopped
    depends_on:
      web:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.docker
    volumes:
      - .:/app

volumes:
  pgdata: